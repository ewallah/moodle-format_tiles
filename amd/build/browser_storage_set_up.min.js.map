{"version":3,"sources":["../src/browser_storage_set_up.js"],"names":["define","$","storageUserConsent","GIVEN","DENIED","localStorageKeyElements","userPrefStorage","user","storageType","local","session","Enabled","userId","userChoice","encodeStorageKey","storageAllowed","browserChoice","localStorage","getItem","setAllowed","allowedOrNot","setItem","obtainUserPreference","cleanUpFunc","require","str","Notification","get_strings","key","component","done","s","confirm","storageInitialCheck","localOrSession","storage","sessionStorage","removeItem","err","log","debug","getStorageKey","init","userIdInit","assumeConsent","document","ready","setTimeout","click","e","preventDefault"],"mappings":"AA4BAA,OAAM,uCAAC,CAAC,QAAD,CAAD,CAAa,SAAUC,CAAV,CAAa,CAC5B,aAD4B,GAGxBC,CAAAA,CAAkB,CAAG,CACrBC,KAAK,CAAE,KADc,CAErBC,MAAM,CAAE,IAFa,CAHG,CAQxBC,CAAuB,CAAG,CAC1BC,eAAe,CAAE,2BADS,CAE1BC,IAAI,CAAE,QAFoB,CARF,CAaxBC,CAAW,CAAG,CACdC,KAAK,CAAE,OADO,CAEdC,OAAO,CAAE,SAFK,CAbU,CAkBxBC,CAAO,CAAG,CACVF,KAAK,GADK,CAEVC,OAAO,GAFG,CAlBc,CAsBxBE,CAtBwB,CAwBxBC,CAAU,CAAG,IAxBW,CA0BxBC,CAAgB,CAAG,UAAW,CAC9B,MAAOT,CAAAA,CAAuB,CAACC,eAAxB,CAA0CD,CAAuB,CAACE,IAAlE,CAAyEK,CACnF,CA5B2B,CA8BxBG,CAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAW,CAC5B,GAAmB,IAAf,GAAAF,CAAJ,CAAyB,CACrB,MAAOA,CAAAA,CACV,CAFD,IAEO,CACH,GAAIG,CAAAA,CAAa,CAAGC,YAAY,CAACC,OAAb,CAAqBJ,CAAgB,EAArC,CAApB,CACA,GAAIE,CAAJ,CAAmB,CACfH,CAAU,CAAGG,CAAa,GAAKd,CAAkB,CAACC,KAAlD,CACA,MAAOU,CAAAA,CACV,CAHD,IAGO,CAEH,MAAO,KACV,CACJ,CACJ,CA3C2B,CA6CxBM,CAAU,CAAG,QAAbA,CAAAA,UAAa,CAASC,CAAT,CAAuB,CACpC,GAAIA,CAAJ,CAAkB,CACdP,CAAU,GAAV,CACAI,YAAY,CAACI,OAAb,CAAqBP,CAAgB,EAArC,CAAyCZ,CAAkB,CAACC,KAA5D,CACH,CAHD,IAGO,CACHU,CAAU,GAAV,CACAI,YAAY,CAACI,OAAb,CAAqBP,CAAgB,EAArC,CAAyCZ,CAAkB,CAACE,MAA5D,CACH,CACJ,CArD2B,CA2DxBkB,CAAoB,CAAG,SAAUC,CAAV,CAAuB,CAC9CC,OAAO,CAAC,CAAC,UAAD,CAAa,mBAAb,CAAD,CAAoC,SAASC,CAAT,CAAcC,CAAd,CAA4B,CACnED,CAAG,CAACE,WAAJ,CAAgB,CACZ,CAACC,GAAG,CAAE,UAAN,CAAkBC,SAAS,CAAE,cAA7B,CADY,CAEZ,CAACD,GAAG,CAAE,kBAAN,CAA0BC,SAAS,CAAE,cAArC,CAFY,CAGZ,CAACD,GAAG,CAAE,KAAN,CAHY,CAIZ,CAACA,GAAG,CAAE,IAAN,CAJY,CAAhB,EAKGE,IALH,CAKQ,SAAUC,CAAV,CAAa,CACjBL,CAAY,CAACM,OAAb,CACID,CAAC,CAAC,CAAD,CADL,CAEIA,CAAC,CAAC,CAAD,CAFL,CAGIA,CAAC,CAAC,CAAD,CAHL,CAIIA,CAAC,CAAC,CAAD,CAJL,CAKI,UAAW,CACPZ,CAAU,IACb,CAPL,CAQI,UAAW,CACPA,CAAU,IAAV,CACA,GAA2B,UAAvB,QAAOI,CAAAA,CAAX,CAAuC,CACnCA,CAAW,EACd,CACJ,CAbL,CAeH,CArBD,CAsBH,CAvBM,CAwBV,CApF2B,CA2FxBU,CAAmB,CAAG,SAAUC,CAAV,CAA0B,CAChD,GAAIC,CAAAA,CAAJ,CACA,GAAI,CACA,GAAID,CAAc,GAAK1B,CAAW,CAACC,KAAnC,CAA0C,CACtC0B,CAAO,CAAGlB,YACb,CAFD,IAEO,IAAIiB,CAAc,GAAK1B,CAAW,CAACE,OAAnC,CAA4C,CAC/CyB,CAAO,CAAGC,cACb,CACD,GAAuB,WAAnB,QAAOD,CAAAA,CAAX,CAAoC,CAChC,QACH,CACDA,CAAO,CAACd,OAAR,CAAgB,UAAhB,CAA4B,WAA5B,EACA,GAAoC,WAAhC,GAAAc,CAAO,CAACjB,OAAR,CAAgB,UAAhB,CAAJ,CAAiD,CAC7CiB,CAAO,CAACE,UAAR,CAAmB,UAAnB,EACA,QACH,CACD,QACH,CAAC,MAAOC,CAAP,CAAY,CACVd,OAAO,CAAC,CAAC,UAAD,CAAD,CAAe,SAASe,CAAT,CAAc,CAChCA,CAAG,CAACC,KAAJ,CAAUF,CAAV,CACH,CAFM,CAAP,CAGA,QACH,CACJ,CAlH2B,CAoH5B,MAAO,CAEHnB,UAAU,CAAE,oBAASC,CAAT,CAAuB,CAC/BD,CAAU,CAACC,CAAD,CACb,CAJE,CAKHL,cAAc,CAAE,yBAAW,CACvB,MAAOA,CAAAA,CAAc,EACxB,CAPE,CAQH0B,aAAa,CAAE,wBAAW,CACtB,MAAO3B,CAAAA,CAAgB,EAC1B,CAVE,CAWHH,OAAO,CAAEA,CAXN,CAaH+B,IAAI,CAAE,cAASC,CAAT,CAAqBC,CAArB,CAAoCrB,CAApC,CAAiD,CACnDX,CAAM,CAAG+B,CAAT,CACA1C,CAAC,CAAC4C,QAAD,CAAD,CAAYC,KAAZ,CAAkB,UAAY,CAC1BnC,CAAO,CAACF,KAAR,CAAgBwB,CAAmB,CAACzB,CAAW,CAACC,KAAb,CAAnC,CACAE,CAAO,CAACD,OAAR,CAAkBuB,CAAmB,CAACzB,CAAW,CAACE,OAAb,CAArC,CAEA,GAAIkC,CAAJ,CAAmB,CACf/B,CAAU,GACb,CAFD,IAEO,IAAyB,IAArB,GAAAE,CAAc,EAAlB,CAA+B,CAElCgC,UAAU,CAAC,UAAW,CAClBlC,CAAU,CAAGS,CAAoB,CAACC,CAAD,CACpC,CAFS,CAEP,GAFO,CAGb,CAIDtB,CAAC,CAAC,uBAAD,CAAD,CAAyB+C,KAAzB,CAA+B,SAAUC,CAAV,CAAa,CACxCA,CAAC,CAACC,cAAF,GACA5B,CAAoB,CAACC,CAAD,CACvB,CAHD,CAIH,CAnBD,CAoBH,CAnCE,CAsCV,CA1JK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript Module to help set up user needs browser storage.\n *\n * @module browser_storage_set_up\n * @package course/format\n * @subpackage tiles\n * @copyright 2019 David Watson {@link http://evolutioncode.uk}\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since Moodle 3.3\n */\n\n/* eslint space-before-function-paren: 0 */\n\ndefine([\"jquery\"], function ($) {\n    \"use strict\";\n\n    var storageUserConsent = {\n        GIVEN: \"yes\", // What to store in local storage to indicate consent granted.\n        DENIED: \"no\" // Or to indicate consent denied.\n    };\n\n    var localStorageKeyElements = {\n        userPrefStorage: \"mdl-tiles-userPrefStorage\",\n        user: \"-user-\"\n    };\n\n    var storageType = {\n        local: \"local\",\n        session: \"session\"\n    };\n\n    var Enabled = {\n        local: false,\n        session: false\n    };\n    var userId;\n\n    var userChoice = null; // The user's current choice - initially null as we have not yet checked local storage or asked user.\n\n    var encodeStorageKey = function() {\n        return localStorageKeyElements.userPrefStorage + localStorageKeyElements.user + userId;\n    };\n\n    var storageAllowed = function() {\n        if (userChoice !== null) {\n            return userChoice;\n        } else {\n            var browserChoice = localStorage.getItem(encodeStorageKey());\n            if (browserChoice) {\n                userChoice = browserChoice === storageUserConsent.GIVEN;\n                return userChoice;\n            } else {\n                // This shouldn't happen much as user asked for pref if not present.\n                return null;\n            }\n        }\n    };\n\n    var setAllowed = function(allowedOrNot) {\n        if (allowedOrNot) {\n            userChoice = true;\n            localStorage.setItem(encodeStorageKey(), storageUserConsent.GIVEN);\n        } else {\n            userChoice = false;\n            localStorage.setItem(encodeStorageKey(), storageUserConsent.DENIED);\n        }\n    };\n\n    /**\n     * Launch the window enabling the user to select whether we want to store data locally or not\n     * @param {function} cleanUpFunc the function to execute to clean data if user says no.\n     */\n    var obtainUserPreference = function (cleanUpFunc) {\n        require([\"core/str\", \"core/notification\"], function(str, Notification) {\n            str.get_strings([\n                {key: \"datapref\", component: \"format_tiles\"},\n                {key: \"dataprefquestion\", component: \"format_tiles\"},\n                {key: \"yes\"},\n                {key: \"no\"}\n            ]).done(function (s) {\n                Notification.confirm(\n                    s[0],\n                    s[1],\n                    s[2],\n                    s[3],\n                    function() {\n                        setAllowed(true);\n                    },\n                    function() {\n                        setAllowed(false);\n                        if (typeof cleanUpFunc === \"function\") {\n                            cleanUpFunc();\n                        }\n                    }\n                );\n            });\n        });\n    };\n\n    /**\n     * Check if the user's browser supports localstorage or session storage\n     * @param {String} localOrSession the type of storage we wish to check\n     * @returns {boolean} whether or not storage is supported\n     */\n    var storageInitialCheck = function (localOrSession) {\n        var storage;\n        try {\n            if (localOrSession === storageType.local) {\n                storage = localStorage;\n            } else if (localOrSession === storageType.session) {\n                storage = sessionStorage;\n            }\n            if (typeof storage === \"undefined\") {\n                return false;\n            }\n            storage.setItem(\"testItem\", \"testValue\");\n            if (storage.getItem(\"testItem\") === \"testValue\") {\n                storage.removeItem(\"testItem\");\n                return true;\n            }\n            return false;\n        } catch (err) {\n            require([\"core/log\"], function(log) {\n                log.debug(err);\n            });\n            return false;\n        }\n    };\n\n    return {\n\n        setAllowed: function(allowedOrNot) {\n            setAllowed(allowedOrNot);\n        },\n        storageAllowed: function() {\n            return storageAllowed();\n        },\n        getStorageKey: function() {\n            return encodeStorageKey();\n        },\n        Enabled: Enabled,\n\n        init: function(userIdInit, assumeConsent, cleanUpFunc) {\n            userId = userIdInit;\n            $(document).ready(function () {\n                Enabled.local = storageInitialCheck(storageType.local);\n                Enabled.session = storageInitialCheck(storageType.session);\n\n                if (assumeConsent) {\n                    userChoice = true;\n                } else if (storageAllowed() === null) {\n                    // We wait 3 seconds before launching the dialog to ensure content finished loading.\n                    setTimeout(function() {\n                        userChoice = obtainUserPreference(cleanUpFunc);\n                    }, 3000);\n                }\n\n                // If the user clicks the \"Data preference\" item in the navigation menu,\n                // show them the dialogue box to re-enter their local storage choice.\n                $('a[href*=\"datapref\"]').click(function (e) {\n                    e.preventDefault();\n                    obtainUserPreference(cleanUpFunc);\n                });\n            });\n        }\n    };\n\n});"],"file":"browser_storage_set_up.min.js"}